# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class StepResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, sample: str=None, scores: List[float]=None, mse: float=None, step: float=None):  # noqa: E501
        """StepResponse - a model defined in Swagger

        :param sample: The sample of this StepResponse.  # noqa: E501
        :type sample: str
        :param scores: The scores of this StepResponse.  # noqa: E501
        :type scores: List[float]
        :param mse: The mse of this StepResponse.  # noqa: E501
        :type mse: float
        :param step: The step of this StepResponse.  # noqa: E501
        :type step: float
        """
        self.swagger_types = {
            'sample': str,
            'scores': List[float],
            'mse': float,
            'step': float
        }

        self.attribute_map = {
            'sample': 'sample',
            'scores': 'scores',
            'mse': 'mse',
            'step': 'step'
        }

        self._sample = sample
        self._scores = scores
        self._mse = mse
        self._step = step

    @classmethod
    def from_dict(cls, dikt) -> 'StepResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The stepResponse of this StepResponse.  # noqa: E501
        :rtype: StepResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sample(self) -> str:
        """Gets the sample of this StepResponse.


        :return: The sample of this StepResponse.
        :rtype: str
        """
        return self._sample

    @sample.setter
    def sample(self, sample: str):
        """Sets the sample of this StepResponse.


        :param sample: The sample of this StepResponse.
        :type sample: str
        """

        self._sample = sample

    @property
    def scores(self) -> List[float]:
        """Gets the scores of this StepResponse.


        :return: The scores of this StepResponse.
        :rtype: List[float]
        """
        return self._scores

    @scores.setter
    def scores(self, scores: List[float]):
        """Sets the scores of this StepResponse.


        :param scores: The scores of this StepResponse.
        :type scores: List[float]
        """

        self._scores = scores

    @property
    def mse(self) -> float:
        """Gets the mse of this StepResponse.


        :return: The mse of this StepResponse.
        :rtype: float
        """
        return self._mse

    @mse.setter
    def mse(self, mse: float):
        """Sets the mse of this StepResponse.


        :param mse: The mse of this StepResponse.
        :type mse: float
        """

        self._mse = mse

    @property
    def step(self) -> float:
        """Gets the step of this StepResponse.


        :return: The step of this StepResponse.
        :rtype: float
        """
        return self._step

    @step.setter
    def step(self, step: float):
        """Sets the step of this StepResponse.


        :param step: The step of this StepResponse.
        :type step: float
        """

        self._step = step
